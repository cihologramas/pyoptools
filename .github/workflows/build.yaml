name: Build Package

on: push

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-24.04, windows-2019, macos-11]
        # python-version: ['3.8', '3.9', '3.10', '3.11']
        os: [ubuntu-24.04]
        python-version: ['3.11']
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetches the entire history

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Eigen3 (Ubuntu)
      if: matrix.os == 'ubuntu-24.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y libeigen3-dev

    - name: Install Eigen3 (macOS)
      if: matrix.os == 'macos-11'
      run: |
        brew install eigen
        brew install pkg-config

    - name: Install Eigen3 (Windows)
      if: matrix.os == 'windows-2019'
      run: |
        vcpkg install eigen3:x64-windows

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel twine setuptools_scm[toml]
        pip install Cython==3.0.11 --config-settings="--install-option=--no-cython-compile"
        pip install cibuildwheel


    # The env variable CIBW_BUILD is set here to be able to format matrix.python-version correctly
    - name: Set CIBW_BUILD environment variable using Python
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: python ./.github/scripts/set_cibw_build_env.py

    - name: Build wheels
      run: |
        ls /usr/include/eigen3
        ls /usr/include/eigen3/Eigen
        python -m cibuildwheel --output-dir dist/
      env:
        # CIBW_BUILD: "cp${{ matrix.python-version }}*"
        CIBW_SKIP: "*_i686 *musllinux* pp* *win32"

    - name: Upload Distributions
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: |
          dist/*.whl
          dist/*.tar.gz
          dist/*.zip
        retention-days: 7

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v4.1.7
      - name: Publish distribution
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
